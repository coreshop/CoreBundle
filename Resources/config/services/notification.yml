services:
  # Notification Rule Conditions
  coreshop.notification_rule.condition.order.invoice_state:
    class: CoreShop\Component\Core\Notification\Rule\Condition\Order\InvoiceStateChecker
    arguments: ['@coreshop.order.invoice.processable']
    tags:
      - { name: coreshop.notification_rule.condition, type: invoiceState, notification-type: order, form-type: CoreShop\Bundle\CoreBundle\Form\Type\Notification\Condition\InvoiceStateConfigurationType }

  coreshop.notification_rule.condition.order.shipment_state:
    class: CoreShop\Component\Core\Notification\Rule\Condition\Order\ShipmentStateChecker
    arguments: ['@coreshop.order.shipment.processable']
    tags:
      - { name: coreshop.notification_rule.condition, type: shipmentState, notification-type: order, form-type: CoreShop\Bundle\CoreBundle\Form\Type\Notification\Condition\ShipmentStateConfigurationType }

  coreshop.notification_rule.condition.order.order_state:
    class: CoreShop\Component\Core\Notification\Rule\Condition\Order\OrderStateChecker
    tags:
      - { name: coreshop.notification_rule.condition, type: orderState, notification-type: order, form-type: CoreShop\Bundle\CoreBundle\Form\Type\Notification\Condition\OrderStateConfigurationType }

  coreshop.notification_rule.condition.order.payment_state:
    class: CoreShop\Component\Core\Notification\Rule\Condition\Order\PaymentStateChecker
    tags:
      - { name: coreshop.notification_rule.condition, type: paymentState, notification-type: order, form-type: CoreShop\Bundle\CoreBundle\Form\Type\Notification\Condition\PaymentStateConfigurationType }

  coreshop.notification_rule.condition.order.carriers:
    class: CoreShop\Component\Core\Notification\Rule\Condition\Order\CarriersChecker
    tags:
      - { name: coreshop.notification_rule.condition, type: carriers, notification-type: order, form-type: CoreShop\Bundle\CoreBundle\Form\Type\Rule\Condition\CarriersConfigurationType }

  coreshop.notification_rule.condition.invoice.invoice:
    class: CoreShop\Component\Core\Notification\Rule\Condition\Invoice\InvoiceStateChecker
    arguments: ['@coreshop.order.invoice.processable']
    tags:
      - { name: coreshop.notification_rule.condition, type: invoiceState, notification-type: invoice, form-type: CoreShop\Bundle\CoreBundle\Form\Type\Notification\Condition\InvoiceStateConfigurationType }

  coreshop.notification_rule.condition.shipment.shipment:
    class: CoreShop\Component\Core\Notification\Rule\Condition\Shipment\ShipmentStateChecker
    arguments: ['@coreshop.order.shipment.processable']
    tags:
      - { name: coreshop.notification_rule.condition, type: shipmentState, notification-type: shipment, form-type: CoreShop\Bundle\CoreBundle\Form\Type\Notification\Condition\ShipmentStateConfigurationType }

  coreshop.notification_rule.condition.payment.payment_state:
    class: CoreShop\Component\Core\Notification\Rule\Condition\Payment\PaymentStateChecker
    arguments: ['@coreshop.repository.order']
    tags:
      - { name: coreshop.notification_rule.condition, type: paymentState, notification-type: payment, form-type: CoreShop\Bundle\CoreBundle\Form\Type\Notification\Condition\PaymentStateConfigurationType }

  coreshop.notification_rule.condition.user.user_type:
    class: CoreShop\Component\Core\Notification\Rule\Condition\User\UserTypeChecker
    tags:
      - { name: coreshop.notification_rule.condition, type: userType, notification-type: user, form-type: CoreShop\Bundle\CoreBundle\Form\Type\Notification\Condition\UserTypeConfigurationType }

  # Notification Rule Actions
  coreshop.notification_rule.action.order_mail:
    class: CoreShop\Component\Core\Notification\Rule\Action\Order\OrderMailActionProcessor
    tags:
      - { name: coreshop.notification_rule.action, type: orderMail, notification-type: order, form-type: CoreShop\Bundle\CoreBundle\Form\Type\Notification\Action\OrderMailConfigurationType }
      - { name: coreshop.notification_rule.action, type: orderMail, notification-type: invoice, form-type: CoreShop\Bundle\CoreBundle\Form\Type\Notification\Action\OrderMailConfigurationType }
      - { name: coreshop.notification_rule.action, type: orderMail, notification-type: shipment, form-type: CoreShop\Bundle\CoreBundle\Form\Type\Notification\Action\OrderMailConfigurationType }

  # Listeners -> here the actual magic happens
  coreshop.notification.listener.invoice:
    class: CoreShop\Bundle\CoreBundle\EventListener\NotificationRules\InvoiceListener
    arguments:
      - '@coreshop.notification_rule.processor'
    tags:
      - { name: kernel.event_listener, event: coreshop.invoice.postTransform, method: applyRule }

  coreshop.notification.listener.shipment:
    class: CoreShop\Bundle\CoreBundle\EventListener\NotificationRules\ShipmentListener
    arguments:
      - '@coreshop.notification_rule.processor'
    tags:
      - { name: kernel.event_listener, event: coreshop.shipment.postTransform, method: applyRule }

  coreshop.notification.listsener.order:
    class: CoreShop\Bundle\CoreBundle\EventListener\NotificationRules\OrderWorkflowListener
    arguments:
      - '@coreshop.notification_rule.processor'
    tags:
      - { name: kernel.event_listener, event: coreshop.workflow_manager.success, method: applyRule }